#!/bin/bash

DEST=../stackato-sample-repos
GITHUB_ORG=Stackato-Apps
GITHUB_URL=https://api.github.com/orgs/$GITHUB_ORG/repos
HOME=`pwd`

usage() {
    die "$(cat <<eos

Usage:
    ./extract-directory <directory-path> [<repo-name>]

eos
)"
}

extract() {
    dir=$1
    repo=$2
    if [ -z $dir ]; then usage; fi
    if [ -z $repo ]; then
        repo=`echo -n $dir | sed 's/[^\/]*\/\([^\/]*\).*/\1/'`
    fi
    if [ -z $repo ]; then usage; fi
    if [ ! -d $dir ]; then die "'$dir' is not a directory'"; fi

    dest_dir="$DEST/$repo"
    if [ -d $dest_dir ]; then die "$dest_dir already exists"; fi

    echo "Extracting '$dir' into '$dest_dir'"

    dir_slash=`echo -n $dir | sed 's/\/\?$/\//'`
    private_repo_url=git@github.com:$GITHUB_ORG/$repo.git
    public_repo_url=git://github.com/$GITHUB_ORG/$repo.git

    json='{"name":"'$repo'"}'
    run "$CURL -XPOST $GITHUB_URL -d '$json'"

    run "cp -r . $dest_dir"
    run "cd $dest_dir"
    run "git reset --hard"
    run "git filter-branch --prune-empty --subdirectory-filter $dir_slash -- --all"
    run "git clean -fxd"
    run "git remote set-url origin $private_repo_url"
    run "git push --all"

    run "cd $HOME"

    run "git rm -r $dir"
    run "git add ."
    run "git commit -m 'extracted $dir into Stackato-Apps repo'"
    run "git submodule add $public_repo_url $dir"
    run "git add ."
    run "git commit -m 'Added $dir as a subdir to $public_repo_url'"
    run "git push origin master"
}

check() {
    if [ -z $GITHUB_USER ]; then die "Set GITHUB_USER first"; fi
    if [ -z $GITHUB_PASS ]; then die "Set GITHUB_PASS first"; fi
    export CURL="curl -v -i -k -u '$GITHUB_USER:$GITHUB_PASS'"
}

die() {
    echo "$1"
    exit 1
}

run() {
    echo $1
    if [ -z $EXTRACT_TEST_ONLY ]; then
        eval $1
        catch
    fi
}

runx() {
    echo $1
}

catch() {
    if [ $? -ne 0 ]; then
        die "Error: command failed"
    fi
}

check
extract $1 $2
